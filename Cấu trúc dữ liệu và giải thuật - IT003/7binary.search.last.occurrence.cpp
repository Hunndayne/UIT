/*###Begin banned keyword - each of the following line if appear in code will raise error. regex supported
###End banned keyword*/

#include <iostream>
using namespace std;
#define MAXN 400000

void NhapMang(int A[], const int N) {
    for (int i = 0; i < N; i++)
        std::cin >> A[i];
}

//###INSERT CODE HERE -

int binary_search_last_occurrence(int a[], int n, int x) {
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠁⠉⢿⣿⣿⣿⣿⣿⣿⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⠏⠆⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣤⣤⣴⣶⡶⠗⠾⠿⣴⣦⡀⠀⠈⣿⣿⣿⣿⡷⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⡏⣜⡸⠄⣠⣶⣄⣀⣀⣀⣀⣀⡀⡀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠿⣻⣿⡭⠤⢤⣄⣀⢐⠆⠹⠄⠀⠀⣿⣿⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⣀⠐⡴⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣹⣿⣿⣿⣿⣿⣿⢴⣻⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣷⣦⠀⠀⠀⠀⠀⠀⠜⢉⢟⡧⣶⣿⣷⡶⣦⣭⡓⠂⠀⠀⠀⠀⢸⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠐⠿⢢⡃⢧⡆⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⣿⣿⢸⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⡿⣿⡜⢿⢧⠀⠀⠀⠀⠀⠀⠘⠼⠀⠛⠧⠟⠀⡜⠿⠀⠀⠀⠀⠀⠀⢼⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠿⣼⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⣦⣿⣿⣿⣿⣿⣿⢬⣿⠳⠿⡛⣿⣿⠥⠙⠃⠉⠀⠉⠁⠀⠸⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠁⠀⠀⠀⠀⠀⠀⠀⢸⡏⡀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡀⠈⢯⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠈⢼⡿⣿⣽⣿⣿⣂⠆⠀⠀⠀⠉⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡰⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣧⣀⠀⣾⣷⡄⠀⠀⠀⠀⠀⡀⢀⡀⡀⢄⡠⢀⠤⡀⡄
// ⣠⣀⣤⣀⣤⣌⣀⢠⠀⣠⠗⣒⡿⡇⣿⣯⣿⣿⣯⣆⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣴⣼⡿⠿⠿⠽⠛⠛⠒⠓⠚⠓⠚⠋⠉⠈⠉⠉⠉⠈⠉⠉
// ⣻⢿⣿⣿⣿⣿⣿⣿⣿⠟⢀⣽⣿⣷⣽⣿⣯⢻⣿⡧⠅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⡇⠀⣠⠊⠀⠀⠀⢀⣠⠴⠚⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⣿⣿⣿⣿⣿⣿⣿⣚⣢⣾⣼⣿⣿⣿⣿⣞⣯⡹⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⠋⠀⠀⢀⣼⣿⣶⣶⣆⡦⢤⣀⣀⡀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣧⣔⣴⣤⠄⡀⢠⣶⣶⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⢋⣀⣴⣶⣿⣿⣿⣿⣿⣿⣿⣿⣷⣾⣯⡿⣶⣱⣆⡖⣤⢆⡤⣠⠄⡤⣀⢄⡠⣀⠄⣄⢄⡠
// ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡽⣙⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⠻⣷⡼⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣾⣷⣯⣿⣵⣯⣾⣳⣯⣾⣾⡾⣵
// ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡧⠋⠚⣜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⠿⢿⠻⡙⠫⠙⠎⡑⠣⠛⠸⠭⢛⡹⠯⡻⡝⢿⡽⣻⢿⡿⣿⣿⣿⣿⠿⠛
// ⠛⠙⠋⠟⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡂⠀⠉⢲⡀⠀⠀⠀⢤⣦⣤⣤⣤⣴⣤⣤⣠⣤⡶⠶⠶⠶⠞⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⡿⠻⠙⠂⠈⠀⠁⠀⠀⠀⠁⠀⠀⠀⠀⠈⠁⠀⠁⠃⠌⠡⠋⠎⢓⡛⢿⠟⠉⠀⠀
// ⠀⠀⠈⠀⠀⠈⠙⠙⠻⢛⠿⠿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣔⠀⠀⠈⢣⡀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣸⣿⣿⡟⠋⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠋⠀⠀⠀⠀
// ⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠂⠁⠈⢛⣿⣿⣿⣿⣿⣿⣿⣊⡄⠀⠀⠃⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⢨⢻⠓⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠉⠢⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠻⣿⣿⣿⣿⣶⣤⡀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣴⣟⣅⡟⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⢃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⣿⣿⣿⣿⣿⣿⣶⣀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣶⣿⡿⢛⠞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠘⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣷⣢⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣿⣿⢷⡽⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠹⣆⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⣀⡀⠀⠀⡀⢀⡀⠀⠀⢀⣠⣴⣾⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡆⠀⠀⠀⠀⠀⠀⢐⣾⣿⣿⠙⣿⣿⡿⣟⠿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣷⣿⣿⣷⣿⣿⣿⣿⣿⣿⡿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⣿⣿⣿⣯⡅⢻⡟⢱⡌⢣⡍⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣇⠀⠀⠀⠀⠀⡿⢿⠿⣿⠄⠘⡧⢡⠘⠤⠘⡠⢊⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⢀⠠⠀⠀⠀⠀⠀⠀⠀⠀⣿⡄⠀⠀⠀⠀⡐⠘⡆⢽⡆⠀⠹⡆⢡⠊⠔⠡⡈⢒⠠⢋⠛⢿⣿⣿⣿⢿⣿⣿⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠠⢀⠠⠀
// ⢀⠂⠤⢁⠀⢂⠀⠂⠠⠀⠄⢹⣧⠀⠠⠀⠂⠄⠡⡐⠸⡇⠠⢀⠑⢢⠘⡨⠐⡁⠆⡐⢠⣼⡿⣿⣷⣿⢿⣯⣿⣿⣦⡀⠀⡀⠀⡀⠀⡀⢀⠠⠀⠄⠂⠀⡜⡀⠀⡀⢂⠄⠠⠀⢀⠁⠀⡀⠀⢀⠠⠀⠐⠀⡀⢀⢀⠰⢈⠀⡐⠠⡀⣁⠂⠌⡐⢠⢀⠂
// ⢂⡍⡰⠂⠌⠠⢈⠄⠡⢈⠄⠩⣿⡄⠡⠈⠔⡨⠐⢠⠁⣿⠀⡡⠈⢆⡑⠄⢃⠌⣰⣠⣿⣿⣿⣜⣽⣿⣿⣿⣶⣿⣿⣿⣧⣄⡐⠠⠐⠀⠂⠄⢂⠐⡈⡸⢁⠀⠆⠰⡈⠄⠡⠐⡠⠌⡐⠠⠐⡀⠂⠌⠠⢁⠐⡈⠄⣢⢁⡦⣈⡱⣠⢡⡚⡤⣑⢣⢌⠢
    int low = 0;
    int high = n - 1;
    int result=-1;
    while (low <= high) {
        int mid = low + (high - low) / 2;

        if (a[mid] == x) {
            result=mid;
           low= mid+1;  
        }
        else if (a[mid] < x) low = mid + 1;
        else high=mid -1;
    }
    return result;
  }

int main() {
    int x, n, a[MAXN];

    cin >> x;
    cin >> n;
    NhapMang(a, n);

    cout << binary_search_last_occurrence(a, n, x);

    return 0;
}


